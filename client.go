/*
 * Partial Graph API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package msgraph

import (
	"bytes"
	"context"
	"encoding/json"
	"encoding/xml"
	"errors"
	"fmt"
	"io"
	"io/ioutil"
	"log"
	"mime/multipart"
	"net/http"
	"net/http/httputil"
	"net/url"
	"os"
	"path/filepath"
	"reflect"
	"regexp"
	"strconv"
	"strings"
	"time"
	"unicode/utf8"

	"golang.org/x/oauth2"
)

var (
	jsonCheck = regexp.MustCompile(`(?i:(?:application|text)/(?:vnd\.[^;]+\+)?json)`)
	xmlCheck  = regexp.MustCompile(`(?i:(?:application|text)/xml)`)
)

// APIClient manages communication with the Partial Graph API API vv1.0
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	cfg    *Configuration
	common service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services

	AppCatalogsAppCatalogsApi *AppCatalogsAppCatalogsApiService

	AppCatalogsTeamsAppApi *AppCatalogsTeamsAppApiService

	ApplicationsActionsApi *ApplicationsActionsApiService

	ApplicationsApplicationApi *ApplicationsApplicationApiService

	ApplicationsDirectoryObjectApi *ApplicationsDirectoryObjectApiService

	ApplicationsExtensionPropertyApi *ApplicationsExtensionPropertyApiService

	ApplicationsFunctionsApi *ApplicationsFunctionsApiService

	ApplicationsHomeRealmDiscoveryPolicyApi *ApplicationsHomeRealmDiscoveryPolicyApiService

	ApplicationsTokenIssuancePolicyApi *ApplicationsTokenIssuancePolicyApiService

	ApplicationsTokenLifetimePolicyApi *ApplicationsTokenLifetimePolicyApiService

	AuditLogsAuditLogRootApi *AuditLogsAuditLogRootApiService

	AuditLogsDirectoryAuditApi *AuditLogsDirectoryAuditApiService

	AuditLogsRestrictedSignInApi *AuditLogsRestrictedSignInApiService

	AuditLogsSignInApi *AuditLogsSignInApiService

	CertificateBasedAuthConfigurationCertificateBasedAuthConfigurationApi *CertificateBasedAuthConfigurationCertificateBasedAuthConfigurationApiService

	ChatsChatApi *ChatsChatApiService

	ChatsFunctionsApi *ChatsFunctionsApiService

	CommunicationsActionsApi *CommunicationsActionsApiService

	CommunicationsCallApi *CommunicationsCallApiService

	CommunicationsCallRecordApi *CommunicationsCallRecordApiService

	CommunicationsCloudCommunicationsApi *CommunicationsCloudCommunicationsApiService

	CommunicationsOnlineMeetingApi *CommunicationsOnlineMeetingApiService

	ContactsDirectoryObjectApi *ContactsDirectoryObjectApiService

	ContactsFunctionsApi *ContactsFunctionsApiService

	ContactsOrgContactApi *ContactsOrgContactApiService

	ContractsContractApi *ContractsContractApiService

	DataPolicyOperationsDataPolicyOperationApi *DataPolicyOperationsDataPolicyOperationApiService

	DeviceAppManagementActionsApi *DeviceAppManagementActionsApiService

	DeviceAppManagementAndroidManagedAppProtectionApi *DeviceAppManagementAndroidManagedAppProtectionApiService

	DeviceAppManagementDefaultManagedAppProtectionApi *DeviceAppManagementDefaultManagedAppProtectionApiService

	DeviceAppManagementDeviceAppManagementApi *DeviceAppManagementDeviceAppManagementApiService

	DeviceAppManagementFunctionsApi *DeviceAppManagementFunctionsApiService

	DeviceAppManagementIosManagedAppProtectionApi *DeviceAppManagementIosManagedAppProtectionApiService

	DeviceAppManagementManagedAppPolicyApi *DeviceAppManagementManagedAppPolicyApiService

	DeviceAppManagementManagedAppRegistrationApi *DeviceAppManagementManagedAppRegistrationApiService

	DeviceAppManagementManagedAppStatusApi *DeviceAppManagementManagedAppStatusApiService

	DeviceAppManagementManagedDeviceMobileAppConfigurationApi *DeviceAppManagementManagedDeviceMobileAppConfigurationApiService

	DeviceAppManagementManagedEBookApi *DeviceAppManagementManagedEBookApiService

	DeviceAppManagementMdmWindowsInformationProtectionPolicyApi *DeviceAppManagementMdmWindowsInformationProtectionPolicyApiService

	DeviceAppManagementMobileAppApi *DeviceAppManagementMobileAppApiService

	DeviceAppManagementMobileAppCategoryApi *DeviceAppManagementMobileAppCategoryApiService

	DeviceAppManagementTargetedManagedAppConfigurationApi *DeviceAppManagementTargetedManagedAppConfigurationApiService

	DeviceAppManagementVppTokenApi *DeviceAppManagementVppTokenApiService

	DeviceAppManagementWindowsInformationProtectionPolicyApi *DeviceAppManagementWindowsInformationProtectionPolicyApiService

	DeviceManagementActionsApi *DeviceManagementActionsApiService

	DeviceManagementApplePushNotificationCertificateApi *DeviceManagementApplePushNotificationCertificateApiService

	DeviceManagementComplianceManagementPartnerApi *DeviceManagementComplianceManagementPartnerApiService

	DeviceManagementDetectedAppApi *DeviceManagementDetectedAppApiService

	DeviceManagementDeviceAndAppManagementRoleAssignmentApi *DeviceManagementDeviceAndAppManagementRoleAssignmentApiService

	DeviceManagementDeviceCategoryApi *DeviceManagementDeviceCategoryApiService

	DeviceManagementDeviceCompliancePolicyApi *DeviceManagementDeviceCompliancePolicyApiService

	DeviceManagementDeviceCompliancePolicyDeviceStateSummaryApi *DeviceManagementDeviceCompliancePolicyDeviceStateSummaryApiService

	DeviceManagementDeviceCompliancePolicySettingStateSummaryApi *DeviceManagementDeviceCompliancePolicySettingStateSummaryApiService

	DeviceManagementDeviceConfigurationApi *DeviceManagementDeviceConfigurationApiService

	DeviceManagementDeviceConfigurationDeviceStateSummaryApi *DeviceManagementDeviceConfigurationDeviceStateSummaryApiService

	DeviceManagementDeviceEnrollmentConfigurationApi *DeviceManagementDeviceEnrollmentConfigurationApiService

	DeviceManagementDeviceManagementApi *DeviceManagementDeviceManagementApiService

	DeviceManagementDeviceManagementExchangeConnectorApi *DeviceManagementDeviceManagementExchangeConnectorApiService

	DeviceManagementDeviceManagementPartnerApi *DeviceManagementDeviceManagementPartnerApiService

	DeviceManagementDeviceManagementTroubleshootingEventApi *DeviceManagementDeviceManagementTroubleshootingEventApiService

	DeviceManagementFunctionsApi *DeviceManagementFunctionsApiService

	DeviceManagementIosUpdateDeviceStatusApi *DeviceManagementIosUpdateDeviceStatusApiService

	DeviceManagementManagedDeviceApi *DeviceManagementManagedDeviceApiService

	DeviceManagementManagedDeviceOverviewApi *DeviceManagementManagedDeviceOverviewApiService

	DeviceManagementMobileThreatDefenseConnectorApi *DeviceManagementMobileThreatDefenseConnectorApiService

	DeviceManagementNotificationMessageTemplateApi *DeviceManagementNotificationMessageTemplateApiService

	DeviceManagementOnPremisesConditionalAccessSettingsApi *DeviceManagementOnPremisesConditionalAccessSettingsApiService

	DeviceManagementRemoteAssistancePartnerApi *DeviceManagementRemoteAssistancePartnerApiService

	DeviceManagementResourceOperationApi *DeviceManagementResourceOperationApiService

	DeviceManagementRoleDefinitionApi *DeviceManagementRoleDefinitionApiService

	DeviceManagementSoftwareUpdateStatusSummaryApi *DeviceManagementSoftwareUpdateStatusSummaryApiService

	DeviceManagementTelecomExpenseManagementPartnerApi *DeviceManagementTelecomExpenseManagementPartnerApiService

	DeviceManagementTermsAndConditionsApi *DeviceManagementTermsAndConditionsApiService

	DeviceManagementWindowsInformationProtectionAppLearningSummaryApi *DeviceManagementWindowsInformationProtectionAppLearningSummaryApiService

	DeviceManagementWindowsInformationProtectionNetworkLearningSummaryApi *DeviceManagementWindowsInformationProtectionNetworkLearningSummaryApiService

	DevicesDeviceApi *DevicesDeviceApiService

	DevicesDirectoryObjectApi *DevicesDirectoryObjectApiService

	DevicesExtensionApi *DevicesExtensionApiService

	DirectoryAdministrativeUnitApi *DirectoryAdministrativeUnitApiService

	DirectoryDirectoryApi *DirectoryDirectoryApiService

	DirectoryDirectoryObjectApi *DirectoryDirectoryObjectApiService

	DirectoryFunctionsApi *DirectoryFunctionsApiService

	DirectoryObjectsActionsApi *DirectoryObjectsActionsApiService

	DirectoryObjectsDirectoryObjectApi *DirectoryObjectsDirectoryObjectApiService

	DirectoryRoleTemplatesDirectoryRoleTemplateApi *DirectoryRoleTemplatesDirectoryRoleTemplateApiService

	DirectoryRolesDirectoryObjectApi *DirectoryRolesDirectoryObjectApiService

	DirectoryRolesDirectoryRoleApi *DirectoryRolesDirectoryRoleApiService

	DirectoryRolesFunctionsApi *DirectoryRolesFunctionsApiService

	DirectoryRolesScopedRoleMembershipApi *DirectoryRolesScopedRoleMembershipApiService

	DomainDnsRecordsDomainDnsRecordApi *DomainDnsRecordsDomainDnsRecordApiService

	DomainsActionsApi *DomainsActionsApiService

	DomainsDirectoryObjectApi *DomainsDirectoryObjectApiService

	DomainsDomainApi *DomainsDomainApiService

	DomainsDomainDnsRecordApi *DomainsDomainDnsRecordApiService

	DriveActionsApi *DriveActionsApiService

	DriveDriveApi *DriveDriveApiService

	DriveDriveItemApi *DriveDriveItemApiService

	DriveFunctionsApi *DriveFunctionsApiService

	DriveListApi *DriveListApiService

	DrivesActionsApi *DrivesActionsApiService

	DrivesDriveApi *DrivesDriveApiService

	DrivesDriveItemApi *DrivesDriveItemApiService

	DrivesFunctionsApi *DrivesFunctionsApiService

	DrivesListApi *DrivesListApiService

	EducationEducationClassApi *EducationEducationClassApiService

	EducationEducationRootApi *EducationEducationRootApiService

	EducationEducationSchoolApi *EducationEducationSchoolApiService

	EducationEducationUserApi *EducationEducationUserApiService

	GroupLifecyclePoliciesActionsApi *GroupLifecyclePoliciesActionsApiService

	GroupLifecyclePoliciesGroupLifecyclePolicyApi *GroupLifecyclePoliciesGroupLifecyclePolicyApiService

	GroupSettingTemplatesGroupSettingTemplateApi *GroupSettingTemplatesGroupSettingTemplateApiService

	GroupSettingsGroupSettingApi *GroupSettingsGroupSettingApiService

	GroupsActionsApi *GroupsActionsApiService

	GroupsAppRoleAssignmentApi *GroupsAppRoleAssignmentApiService

	GroupsCalendarApi *GroupsCalendarApiService

	GroupsConversationApi *GroupsConversationApiService

	GroupsConversationThreadApi *GroupsConversationThreadApiService

	GroupsDirectoryObjectApi *GroupsDirectoryObjectApiService

	GroupsDriveApi *GroupsDriveApiService

	GroupsEventApi *GroupsEventApiService

	GroupsExtensionApi *GroupsExtensionApiService

	GroupsFunctionsApi *GroupsFunctionsApiService

	GroupsGroupApi *GroupsGroupApiService

	GroupsGroupLifecyclePolicyApi *GroupsGroupLifecyclePolicyApiService

	GroupsGroupSettingApi *GroupsGroupSettingApiService

	GroupsOnenoteApi *GroupsOnenoteApiService

	GroupsPlannerGroupApi *GroupsPlannerGroupApiService

	GroupsProfilePhotoApi *GroupsProfilePhotoApiService

	GroupsSiteApi *GroupsSiteApiService

	GroupsTeamApi *GroupsTeamApiService

	IdentityConditionalAccessRootApi *IdentityConditionalAccessRootApiService

	IdentityIdentityContainerApi *IdentityIdentityContainerApiService

	IdentityProvidersIdentityProviderApi *IdentityProvidersIdentityProviderApiService

	InformationProtectionInformationProtectionApi *InformationProtectionInformationProtectionApiService

	InformationProtectionThreatAssessmentRequestApi *InformationProtectionThreatAssessmentRequestApiService

	InvitationsInvitationApi *InvitationsInvitationApiService

	InvitationsUserApi *InvitationsUserApiService

	MeActionsApi *MeActionsApiService

	MeAppRoleAssignmentApi *MeAppRoleAssignmentApiService

	MeCalendarApi *MeCalendarApiService

	MeCalendarGroupApi *MeCalendarGroupApiService

	MeContactApi *MeContactApiService

	MeContactFolderApi *MeContactFolderApiService

	MeDeviceManagementTroubleshootingEventApi *MeDeviceManagementTroubleshootingEventApiService

	MeDirectoryObjectApi *MeDirectoryObjectApiService

	MeDriveApi *MeDriveApiService

	MeEventApi *MeEventApiService

	MeExtensionApi *MeExtensionApiService

	MeFunctionsApi *MeFunctionsApiService

	MeInferenceClassificationApi *MeInferenceClassificationApiService

	MeLicenseDetailsApi *MeLicenseDetailsApiService

	MeMailFolderApi *MeMailFolderApiService

	MeManagedAppRegistrationApi *MeManagedAppRegistrationApiService

	MeManagedDeviceApi *MeManagedDeviceApiService

	MeMessageApi *MeMessageApiService

	MeOAuth2PermissionGrantApi *MeOAuth2PermissionGrantApiService

	MeOfficeGraphInsightsApi *MeOfficeGraphInsightsApiService

	MeOnenoteApi *MeOnenoteApiService

	MeOnlineMeetingApi *MeOnlineMeetingApiService

	MeOutlookUserApi *MeOutlookUserApiService

	MePersonApi *MePersonApiService

	MePlannerUserApi *MePlannerUserApiService

	MeProfilePhotoApi *MeProfilePhotoApiService

	MeScopedRoleMembershipApi *MeScopedRoleMembershipApiService

	MeSiteApi *MeSiteApiService

	MeTeamApi *MeTeamApiService

	MeTodoApi *MeTodoApiService

	MeUserApi *MeUserApiService

	MeUserActivityApi *MeUserActivityApiService

	MeUserSettingsApi *MeUserSettingsApiService

	MeUserTeamworkApi *MeUserTeamworkApiService

	Oauth2PermissionGrantsFunctionsApi *Oauth2PermissionGrantsFunctionsApiService

	Oauth2PermissionGrantsOAuth2PermissionGrantApi *Oauth2PermissionGrantsOAuth2PermissionGrantApiService

	OrganizationActionsApi *OrganizationActionsApiService

	OrganizationCertificateBasedAuthConfigurationApi *OrganizationCertificateBasedAuthConfigurationApiService

	OrganizationExtensionApi *OrganizationExtensionApiService

	OrganizationOrganizationApi *OrganizationOrganizationApiService

	PlacesPlaceApi *PlacesPlaceApiService

	PlannerPlannerApi *PlannerPlannerApiService

	PlannerPlannerBucketApi *PlannerPlannerBucketApiService

	PlannerPlannerPlanApi *PlannerPlannerPlanApiService

	PlannerPlannerTaskApi *PlannerPlannerTaskApiService

	PoliciesActivityBasedTimeoutPolicyApi *PoliciesActivityBasedTimeoutPolicyApiService

	PoliciesClaimsMappingPolicyApi *PoliciesClaimsMappingPolicyApiService

	PoliciesConditionalAccessPolicyApi *PoliciesConditionalAccessPolicyApiService

	PoliciesHomeRealmDiscoveryPolicyApi *PoliciesHomeRealmDiscoveryPolicyApiService

	PoliciesIdentitySecurityDefaultsEnforcementPolicyApi *PoliciesIdentitySecurityDefaultsEnforcementPolicyApiService

	PoliciesPermissionGrantPolicyApi *PoliciesPermissionGrantPolicyApiService

	PoliciesPolicyRootApi *PoliciesPolicyRootApiService

	PoliciesTokenIssuancePolicyApi *PoliciesTokenIssuancePolicyApiService

	PoliciesTokenLifetimePolicyApi *PoliciesTokenLifetimePolicyApiService

	ReportsFunctionsApi *ReportsFunctionsApiService

	ReportsReportRootApi *ReportsReportRootApiService

	SchemaExtensionsSchemaExtensionApi *SchemaExtensionsSchemaExtensionApiService

	ScopedRoleMembershipsScopedRoleMembershipApi *ScopedRoleMembershipsScopedRoleMembershipApiService

	SecurityAlertApi *SecurityAlertApiService

	SecuritySecureScoreApi *SecuritySecureScoreApiService

	SecuritySecureScoreControlProfileApi *SecuritySecureScoreControlProfileApiService

	SecuritySecurityApi *SecuritySecurityApiService

	ServicePrincipalsActionsApi *ServicePrincipalsActionsApiService

	ServicePrincipalsAppRoleAssignmentApi *ServicePrincipalsAppRoleAssignmentApiService

	ServicePrincipalsClaimsMappingPolicyApi *ServicePrincipalsClaimsMappingPolicyApiService

	ServicePrincipalsDelegatedPermissionClassificationApi *ServicePrincipalsDelegatedPermissionClassificationApiService

	ServicePrincipalsDirectoryObjectApi *ServicePrincipalsDirectoryObjectApiService

	ServicePrincipalsEndpointApi *ServicePrincipalsEndpointApiService

	ServicePrincipalsFunctionsApi *ServicePrincipalsFunctionsApiService

	ServicePrincipalsHomeRealmDiscoveryPolicyApi *ServicePrincipalsHomeRealmDiscoveryPolicyApiService

	ServicePrincipalsOAuth2PermissionGrantApi *ServicePrincipalsOAuth2PermissionGrantApiService

	ServicePrincipalsServicePrincipalApi *ServicePrincipalsServicePrincipalApiService

	ServicePrincipalsTokenIssuancePolicyApi *ServicePrincipalsTokenIssuancePolicyApiService

	ServicePrincipalsTokenLifetimePolicyApi *ServicePrincipalsTokenLifetimePolicyApiService

	SharesActionsApi *SharesActionsApiService

	SharesDriveItemApi *SharesDriveItemApiService

	SharesFunctionsApi *SharesFunctionsApiService

	SharesListApi *SharesListApiService

	SharesListItemApi *SharesListItemApiService

	SharesPermissionApi *SharesPermissionApiService

	SharesSharedDriveItemApi *SharesSharedDriveItemApiService

	SharesSiteApi *SharesSiteApiService

	SitesActionsApi *SitesActionsApiService

	SitesBaseItemApi *SitesBaseItemApiService

	SitesColumnDefinitionApi *SitesColumnDefinitionApiService

	SitesContentTypeApi *SitesContentTypeApiService

	SitesDriveApi *SitesDriveApiService

	SitesFunctionsApi *SitesFunctionsApiService

	SitesItemAnalyticsApi *SitesItemAnalyticsApiService

	SitesListApi *SitesListApiService

	SitesOnenoteApi *SitesOnenoteApiService

	SitesSiteApi *SitesSiteApiService

	SubscribedSkusSubscribedSkuApi *SubscribedSkusSubscribedSkuApiService

	SubscriptionsSubscriptionApi *SubscriptionsSubscriptionApiService

	TeamsActionsApi *TeamsActionsApiService

	TeamsChannelApi *TeamsChannelApiService

	TeamsConversationMemberApi *TeamsConversationMemberApiService

	TeamsFunctionsApi *TeamsFunctionsApiService

	TeamsGroupApi *TeamsGroupApiService

	TeamsScheduleApi *TeamsScheduleApiService

	TeamsTeamApi *TeamsTeamApiService

	TeamsTeamsAppInstallationApi *TeamsTeamsAppInstallationApiService

	TeamsTeamsAsyncOperationApi *TeamsTeamsAsyncOperationApiService

	TeamsTeamsTemplateApi *TeamsTeamsTemplateApiService

	TeamsTemplatesTeamsTemplateApi *TeamsTemplatesTeamsTemplateApiService

	TeamworkTeamworkApi *TeamworkTeamworkApiService

	TeamworkWorkforceIntegrationApi *TeamworkWorkforceIntegrationApiService

	UsersActionsApi *UsersActionsApiService

	UsersAppRoleAssignmentApi *UsersAppRoleAssignmentApiService

	UsersCalendarApi *UsersCalendarApiService

	UsersCalendarGroupApi *UsersCalendarGroupApiService

	UsersContactApi *UsersContactApiService

	UsersContactFolderApi *UsersContactFolderApiService

	UsersDeviceManagementTroubleshootingEventApi *UsersDeviceManagementTroubleshootingEventApiService

	UsersDirectoryObjectApi *UsersDirectoryObjectApiService

	UsersDriveApi *UsersDriveApiService

	UsersEventApi *UsersEventApiService

	UsersExtensionApi *UsersExtensionApiService

	UsersFunctionsApi *UsersFunctionsApiService

	UsersInferenceClassificationApi *UsersInferenceClassificationApiService

	UsersLicenseDetailsApi *UsersLicenseDetailsApiService

	UsersMailFolderApi *UsersMailFolderApiService

	UsersManagedAppRegistrationApi *UsersManagedAppRegistrationApiService

	UsersManagedDeviceApi *UsersManagedDeviceApiService

	UsersMessageApi *UsersMessageApiService

	UsersOAuth2PermissionGrantApi *UsersOAuth2PermissionGrantApiService

	UsersOfficeGraphInsightsApi *UsersOfficeGraphInsightsApiService

	UsersOnenoteApi *UsersOnenoteApiService

	UsersOnlineMeetingApi *UsersOnlineMeetingApiService

	UsersOutlookUserApi *UsersOutlookUserApiService

	UsersPersonApi *UsersPersonApiService

	UsersPlannerUserApi *UsersPlannerUserApiService

	UsersProfilePhotoApi *UsersProfilePhotoApiService

	UsersScopedRoleMembershipApi *UsersScopedRoleMembershipApiService

	UsersSiteApi *UsersSiteApiService

	UsersTeamApi *UsersTeamApiService

	UsersTodoApi *UsersTodoApiService

	UsersUserApi *UsersUserApiService

	UsersUserActivityApi *UsersUserActivityApiService

	UsersUserSettingsApi *UsersUserSettingsApiService

	UsersUserTeamworkApi *UsersUserTeamworkApiService

	WorkbooksActionsApi *WorkbooksActionsApiService

	WorkbooksDriveItemApi *WorkbooksDriveItemApiService

	WorkbooksDriveItemVersionApi *WorkbooksDriveItemVersionApiService

	WorkbooksFunctionsApi *WorkbooksFunctionsApiService

	WorkbooksItemAnalyticsApi *WorkbooksItemAnalyticsApiService

	WorkbooksListItemApi *WorkbooksListItemApiService

	WorkbooksPermissionApi *WorkbooksPermissionApiService

	WorkbooksSubscriptionApi *WorkbooksSubscriptionApiService

	WorkbooksThumbnailSetApi *WorkbooksThumbnailSetApiService

	WorkbooksWorkbookApi *WorkbooksWorkbookApiService
}

type service struct {
	client *APIClient
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(cfg *Configuration) *APIClient {
	if cfg.HTTPClient == nil {
		cfg.HTTPClient = http.DefaultClient
	}

	c := &APIClient{}
	c.cfg = cfg
	c.common.client = c

	// API Services
	c.AppCatalogsAppCatalogsApi = (*AppCatalogsAppCatalogsApiService)(&c.common)
	c.AppCatalogsTeamsAppApi = (*AppCatalogsTeamsAppApiService)(&c.common)
	c.ApplicationsActionsApi = (*ApplicationsActionsApiService)(&c.common)
	c.ApplicationsApplicationApi = (*ApplicationsApplicationApiService)(&c.common)
	c.ApplicationsDirectoryObjectApi = (*ApplicationsDirectoryObjectApiService)(&c.common)
	c.ApplicationsExtensionPropertyApi = (*ApplicationsExtensionPropertyApiService)(&c.common)
	c.ApplicationsFunctionsApi = (*ApplicationsFunctionsApiService)(&c.common)
	c.ApplicationsHomeRealmDiscoveryPolicyApi = (*ApplicationsHomeRealmDiscoveryPolicyApiService)(&c.common)
	c.ApplicationsTokenIssuancePolicyApi = (*ApplicationsTokenIssuancePolicyApiService)(&c.common)
	c.ApplicationsTokenLifetimePolicyApi = (*ApplicationsTokenLifetimePolicyApiService)(&c.common)
	c.AuditLogsAuditLogRootApi = (*AuditLogsAuditLogRootApiService)(&c.common)
	c.AuditLogsDirectoryAuditApi = (*AuditLogsDirectoryAuditApiService)(&c.common)
	c.AuditLogsRestrictedSignInApi = (*AuditLogsRestrictedSignInApiService)(&c.common)
	c.AuditLogsSignInApi = (*AuditLogsSignInApiService)(&c.common)
	c.CertificateBasedAuthConfigurationCertificateBasedAuthConfigurationApi = (*CertificateBasedAuthConfigurationCertificateBasedAuthConfigurationApiService)(&c.common)
	c.ChatsChatApi = (*ChatsChatApiService)(&c.common)
	c.ChatsFunctionsApi = (*ChatsFunctionsApiService)(&c.common)
	c.CommunicationsActionsApi = (*CommunicationsActionsApiService)(&c.common)
	c.CommunicationsCallApi = (*CommunicationsCallApiService)(&c.common)
	c.CommunicationsCallRecordApi = (*CommunicationsCallRecordApiService)(&c.common)
	c.CommunicationsCloudCommunicationsApi = (*CommunicationsCloudCommunicationsApiService)(&c.common)
	c.CommunicationsOnlineMeetingApi = (*CommunicationsOnlineMeetingApiService)(&c.common)
	c.ContactsDirectoryObjectApi = (*ContactsDirectoryObjectApiService)(&c.common)
	c.ContactsFunctionsApi = (*ContactsFunctionsApiService)(&c.common)
	c.ContactsOrgContactApi = (*ContactsOrgContactApiService)(&c.common)
	c.ContractsContractApi = (*ContractsContractApiService)(&c.common)
	c.DataPolicyOperationsDataPolicyOperationApi = (*DataPolicyOperationsDataPolicyOperationApiService)(&c.common)
	c.DeviceAppManagementActionsApi = (*DeviceAppManagementActionsApiService)(&c.common)
	c.DeviceAppManagementAndroidManagedAppProtectionApi = (*DeviceAppManagementAndroidManagedAppProtectionApiService)(&c.common)
	c.DeviceAppManagementDefaultManagedAppProtectionApi = (*DeviceAppManagementDefaultManagedAppProtectionApiService)(&c.common)
	c.DeviceAppManagementDeviceAppManagementApi = (*DeviceAppManagementDeviceAppManagementApiService)(&c.common)
	c.DeviceAppManagementFunctionsApi = (*DeviceAppManagementFunctionsApiService)(&c.common)
	c.DeviceAppManagementIosManagedAppProtectionApi = (*DeviceAppManagementIosManagedAppProtectionApiService)(&c.common)
	c.DeviceAppManagementManagedAppPolicyApi = (*DeviceAppManagementManagedAppPolicyApiService)(&c.common)
	c.DeviceAppManagementManagedAppRegistrationApi = (*DeviceAppManagementManagedAppRegistrationApiService)(&c.common)
	c.DeviceAppManagementManagedAppStatusApi = (*DeviceAppManagementManagedAppStatusApiService)(&c.common)
	c.DeviceAppManagementManagedDeviceMobileAppConfigurationApi = (*DeviceAppManagementManagedDeviceMobileAppConfigurationApiService)(&c.common)
	c.DeviceAppManagementManagedEBookApi = (*DeviceAppManagementManagedEBookApiService)(&c.common)
	c.DeviceAppManagementMdmWindowsInformationProtectionPolicyApi = (*DeviceAppManagementMdmWindowsInformationProtectionPolicyApiService)(&c.common)
	c.DeviceAppManagementMobileAppApi = (*DeviceAppManagementMobileAppApiService)(&c.common)
	c.DeviceAppManagementMobileAppCategoryApi = (*DeviceAppManagementMobileAppCategoryApiService)(&c.common)
	c.DeviceAppManagementTargetedManagedAppConfigurationApi = (*DeviceAppManagementTargetedManagedAppConfigurationApiService)(&c.common)
	c.DeviceAppManagementVppTokenApi = (*DeviceAppManagementVppTokenApiService)(&c.common)
	c.DeviceAppManagementWindowsInformationProtectionPolicyApi = (*DeviceAppManagementWindowsInformationProtectionPolicyApiService)(&c.common)
	c.DeviceManagementActionsApi = (*DeviceManagementActionsApiService)(&c.common)
	c.DeviceManagementApplePushNotificationCertificateApi = (*DeviceManagementApplePushNotificationCertificateApiService)(&c.common)
	c.DeviceManagementComplianceManagementPartnerApi = (*DeviceManagementComplianceManagementPartnerApiService)(&c.common)
	c.DeviceManagementDetectedAppApi = (*DeviceManagementDetectedAppApiService)(&c.common)
	c.DeviceManagementDeviceAndAppManagementRoleAssignmentApi = (*DeviceManagementDeviceAndAppManagementRoleAssignmentApiService)(&c.common)
	c.DeviceManagementDeviceCategoryApi = (*DeviceManagementDeviceCategoryApiService)(&c.common)
	c.DeviceManagementDeviceCompliancePolicyApi = (*DeviceManagementDeviceCompliancePolicyApiService)(&c.common)
	c.DeviceManagementDeviceCompliancePolicyDeviceStateSummaryApi = (*DeviceManagementDeviceCompliancePolicyDeviceStateSummaryApiService)(&c.common)
	c.DeviceManagementDeviceCompliancePolicySettingStateSummaryApi = (*DeviceManagementDeviceCompliancePolicySettingStateSummaryApiService)(&c.common)
	c.DeviceManagementDeviceConfigurationApi = (*DeviceManagementDeviceConfigurationApiService)(&c.common)
	c.DeviceManagementDeviceConfigurationDeviceStateSummaryApi = (*DeviceManagementDeviceConfigurationDeviceStateSummaryApiService)(&c.common)
	c.DeviceManagementDeviceEnrollmentConfigurationApi = (*DeviceManagementDeviceEnrollmentConfigurationApiService)(&c.common)
	c.DeviceManagementDeviceManagementApi = (*DeviceManagementDeviceManagementApiService)(&c.common)
	c.DeviceManagementDeviceManagementExchangeConnectorApi = (*DeviceManagementDeviceManagementExchangeConnectorApiService)(&c.common)
	c.DeviceManagementDeviceManagementPartnerApi = (*DeviceManagementDeviceManagementPartnerApiService)(&c.common)
	c.DeviceManagementDeviceManagementTroubleshootingEventApi = (*DeviceManagementDeviceManagementTroubleshootingEventApiService)(&c.common)
	c.DeviceManagementFunctionsApi = (*DeviceManagementFunctionsApiService)(&c.common)
	c.DeviceManagementIosUpdateDeviceStatusApi = (*DeviceManagementIosUpdateDeviceStatusApiService)(&c.common)
	c.DeviceManagementManagedDeviceApi = (*DeviceManagementManagedDeviceApiService)(&c.common)
	c.DeviceManagementManagedDeviceOverviewApi = (*DeviceManagementManagedDeviceOverviewApiService)(&c.common)
	c.DeviceManagementMobileThreatDefenseConnectorApi = (*DeviceManagementMobileThreatDefenseConnectorApiService)(&c.common)
	c.DeviceManagementNotificationMessageTemplateApi = (*DeviceManagementNotificationMessageTemplateApiService)(&c.common)
	c.DeviceManagementOnPremisesConditionalAccessSettingsApi = (*DeviceManagementOnPremisesConditionalAccessSettingsApiService)(&c.common)
	c.DeviceManagementRemoteAssistancePartnerApi = (*DeviceManagementRemoteAssistancePartnerApiService)(&c.common)
	c.DeviceManagementResourceOperationApi = (*DeviceManagementResourceOperationApiService)(&c.common)
	c.DeviceManagementRoleDefinitionApi = (*DeviceManagementRoleDefinitionApiService)(&c.common)
	c.DeviceManagementSoftwareUpdateStatusSummaryApi = (*DeviceManagementSoftwareUpdateStatusSummaryApiService)(&c.common)
	c.DeviceManagementTelecomExpenseManagementPartnerApi = (*DeviceManagementTelecomExpenseManagementPartnerApiService)(&c.common)
	c.DeviceManagementTermsAndConditionsApi = (*DeviceManagementTermsAndConditionsApiService)(&c.common)
	c.DeviceManagementWindowsInformationProtectionAppLearningSummaryApi = (*DeviceManagementWindowsInformationProtectionAppLearningSummaryApiService)(&c.common)
	c.DeviceManagementWindowsInformationProtectionNetworkLearningSummaryApi = (*DeviceManagementWindowsInformationProtectionNetworkLearningSummaryApiService)(&c.common)
	c.DevicesDeviceApi = (*DevicesDeviceApiService)(&c.common)
	c.DevicesDirectoryObjectApi = (*DevicesDirectoryObjectApiService)(&c.common)
	c.DevicesExtensionApi = (*DevicesExtensionApiService)(&c.common)
	c.DirectoryAdministrativeUnitApi = (*DirectoryAdministrativeUnitApiService)(&c.common)
	c.DirectoryDirectoryApi = (*DirectoryDirectoryApiService)(&c.common)
	c.DirectoryDirectoryObjectApi = (*DirectoryDirectoryObjectApiService)(&c.common)
	c.DirectoryFunctionsApi = (*DirectoryFunctionsApiService)(&c.common)
	c.DirectoryObjectsActionsApi = (*DirectoryObjectsActionsApiService)(&c.common)
	c.DirectoryObjectsDirectoryObjectApi = (*DirectoryObjectsDirectoryObjectApiService)(&c.common)
	c.DirectoryRoleTemplatesDirectoryRoleTemplateApi = (*DirectoryRoleTemplatesDirectoryRoleTemplateApiService)(&c.common)
	c.DirectoryRolesDirectoryObjectApi = (*DirectoryRolesDirectoryObjectApiService)(&c.common)
	c.DirectoryRolesDirectoryRoleApi = (*DirectoryRolesDirectoryRoleApiService)(&c.common)
	c.DirectoryRolesFunctionsApi = (*DirectoryRolesFunctionsApiService)(&c.common)
	c.DirectoryRolesScopedRoleMembershipApi = (*DirectoryRolesScopedRoleMembershipApiService)(&c.common)
	c.DomainDnsRecordsDomainDnsRecordApi = (*DomainDnsRecordsDomainDnsRecordApiService)(&c.common)
	c.DomainsActionsApi = (*DomainsActionsApiService)(&c.common)
	c.DomainsDirectoryObjectApi = (*DomainsDirectoryObjectApiService)(&c.common)
	c.DomainsDomainApi = (*DomainsDomainApiService)(&c.common)
	c.DomainsDomainDnsRecordApi = (*DomainsDomainDnsRecordApiService)(&c.common)
	c.DriveActionsApi = (*DriveActionsApiService)(&c.common)
	c.DriveDriveApi = (*DriveDriveApiService)(&c.common)
	c.DriveDriveItemApi = (*DriveDriveItemApiService)(&c.common)
	c.DriveFunctionsApi = (*DriveFunctionsApiService)(&c.common)
	c.DriveListApi = (*DriveListApiService)(&c.common)
	c.DrivesActionsApi = (*DrivesActionsApiService)(&c.common)
	c.DrivesDriveApi = (*DrivesDriveApiService)(&c.common)
	c.DrivesDriveItemApi = (*DrivesDriveItemApiService)(&c.common)
	c.DrivesFunctionsApi = (*DrivesFunctionsApiService)(&c.common)
	c.DrivesListApi = (*DrivesListApiService)(&c.common)
	c.EducationEducationClassApi = (*EducationEducationClassApiService)(&c.common)
	c.EducationEducationRootApi = (*EducationEducationRootApiService)(&c.common)
	c.EducationEducationSchoolApi = (*EducationEducationSchoolApiService)(&c.common)
	c.EducationEducationUserApi = (*EducationEducationUserApiService)(&c.common)
	c.GroupLifecyclePoliciesActionsApi = (*GroupLifecyclePoliciesActionsApiService)(&c.common)
	c.GroupLifecyclePoliciesGroupLifecyclePolicyApi = (*GroupLifecyclePoliciesGroupLifecyclePolicyApiService)(&c.common)
	c.GroupSettingTemplatesGroupSettingTemplateApi = (*GroupSettingTemplatesGroupSettingTemplateApiService)(&c.common)
	c.GroupSettingsGroupSettingApi = (*GroupSettingsGroupSettingApiService)(&c.common)
	c.GroupsActionsApi = (*GroupsActionsApiService)(&c.common)
	c.GroupsAppRoleAssignmentApi = (*GroupsAppRoleAssignmentApiService)(&c.common)
	c.GroupsCalendarApi = (*GroupsCalendarApiService)(&c.common)
	c.GroupsConversationApi = (*GroupsConversationApiService)(&c.common)
	c.GroupsConversationThreadApi = (*GroupsConversationThreadApiService)(&c.common)
	c.GroupsDirectoryObjectApi = (*GroupsDirectoryObjectApiService)(&c.common)
	c.GroupsDriveApi = (*GroupsDriveApiService)(&c.common)
	c.GroupsEventApi = (*GroupsEventApiService)(&c.common)
	c.GroupsExtensionApi = (*GroupsExtensionApiService)(&c.common)
	c.GroupsFunctionsApi = (*GroupsFunctionsApiService)(&c.common)
	c.GroupsGroupApi = (*GroupsGroupApiService)(&c.common)
	c.GroupsGroupLifecyclePolicyApi = (*GroupsGroupLifecyclePolicyApiService)(&c.common)
	c.GroupsGroupSettingApi = (*GroupsGroupSettingApiService)(&c.common)
	c.GroupsOnenoteApi = (*GroupsOnenoteApiService)(&c.common)
	c.GroupsPlannerGroupApi = (*GroupsPlannerGroupApiService)(&c.common)
	c.GroupsProfilePhotoApi = (*GroupsProfilePhotoApiService)(&c.common)
	c.GroupsSiteApi = (*GroupsSiteApiService)(&c.common)
	c.GroupsTeamApi = (*GroupsTeamApiService)(&c.common)
	c.IdentityConditionalAccessRootApi = (*IdentityConditionalAccessRootApiService)(&c.common)
	c.IdentityIdentityContainerApi = (*IdentityIdentityContainerApiService)(&c.common)
	c.IdentityProvidersIdentityProviderApi = (*IdentityProvidersIdentityProviderApiService)(&c.common)
	c.InformationProtectionInformationProtectionApi = (*InformationProtectionInformationProtectionApiService)(&c.common)
	c.InformationProtectionThreatAssessmentRequestApi = (*InformationProtectionThreatAssessmentRequestApiService)(&c.common)
	c.InvitationsInvitationApi = (*InvitationsInvitationApiService)(&c.common)
	c.InvitationsUserApi = (*InvitationsUserApiService)(&c.common)
	c.MeActionsApi = (*MeActionsApiService)(&c.common)
	c.MeAppRoleAssignmentApi = (*MeAppRoleAssignmentApiService)(&c.common)
	c.MeCalendarApi = (*MeCalendarApiService)(&c.common)
	c.MeCalendarGroupApi = (*MeCalendarGroupApiService)(&c.common)
	c.MeContactApi = (*MeContactApiService)(&c.common)
	c.MeContactFolderApi = (*MeContactFolderApiService)(&c.common)
	c.MeDeviceManagementTroubleshootingEventApi = (*MeDeviceManagementTroubleshootingEventApiService)(&c.common)
	c.MeDirectoryObjectApi = (*MeDirectoryObjectApiService)(&c.common)
	c.MeDriveApi = (*MeDriveApiService)(&c.common)
	c.MeEventApi = (*MeEventApiService)(&c.common)
	c.MeExtensionApi = (*MeExtensionApiService)(&c.common)
	c.MeFunctionsApi = (*MeFunctionsApiService)(&c.common)
	c.MeInferenceClassificationApi = (*MeInferenceClassificationApiService)(&c.common)
	c.MeLicenseDetailsApi = (*MeLicenseDetailsApiService)(&c.common)
	c.MeMailFolderApi = (*MeMailFolderApiService)(&c.common)
	c.MeManagedAppRegistrationApi = (*MeManagedAppRegistrationApiService)(&c.common)
	c.MeManagedDeviceApi = (*MeManagedDeviceApiService)(&c.common)
	c.MeMessageApi = (*MeMessageApiService)(&c.common)
	c.MeOAuth2PermissionGrantApi = (*MeOAuth2PermissionGrantApiService)(&c.common)
	c.MeOfficeGraphInsightsApi = (*MeOfficeGraphInsightsApiService)(&c.common)
	c.MeOnenoteApi = (*MeOnenoteApiService)(&c.common)
	c.MeOnlineMeetingApi = (*MeOnlineMeetingApiService)(&c.common)
	c.MeOutlookUserApi = (*MeOutlookUserApiService)(&c.common)
	c.MePersonApi = (*MePersonApiService)(&c.common)
	c.MePlannerUserApi = (*MePlannerUserApiService)(&c.common)
	c.MeProfilePhotoApi = (*MeProfilePhotoApiService)(&c.common)
	c.MeScopedRoleMembershipApi = (*MeScopedRoleMembershipApiService)(&c.common)
	c.MeSiteApi = (*MeSiteApiService)(&c.common)
	c.MeTeamApi = (*MeTeamApiService)(&c.common)
	c.MeTodoApi = (*MeTodoApiService)(&c.common)
	c.MeUserApi = (*MeUserApiService)(&c.common)
	c.MeUserActivityApi = (*MeUserActivityApiService)(&c.common)
	c.MeUserSettingsApi = (*MeUserSettingsApiService)(&c.common)
	c.MeUserTeamworkApi = (*MeUserTeamworkApiService)(&c.common)
	c.Oauth2PermissionGrantsFunctionsApi = (*Oauth2PermissionGrantsFunctionsApiService)(&c.common)
	c.Oauth2PermissionGrantsOAuth2PermissionGrantApi = (*Oauth2PermissionGrantsOAuth2PermissionGrantApiService)(&c.common)
	c.OrganizationActionsApi = (*OrganizationActionsApiService)(&c.common)
	c.OrganizationCertificateBasedAuthConfigurationApi = (*OrganizationCertificateBasedAuthConfigurationApiService)(&c.common)
	c.OrganizationExtensionApi = (*OrganizationExtensionApiService)(&c.common)
	c.OrganizationOrganizationApi = (*OrganizationOrganizationApiService)(&c.common)
	c.PlacesPlaceApi = (*PlacesPlaceApiService)(&c.common)
	c.PlannerPlannerApi = (*PlannerPlannerApiService)(&c.common)
	c.PlannerPlannerBucketApi = (*PlannerPlannerBucketApiService)(&c.common)
	c.PlannerPlannerPlanApi = (*PlannerPlannerPlanApiService)(&c.common)
	c.PlannerPlannerTaskApi = (*PlannerPlannerTaskApiService)(&c.common)
	c.PoliciesActivityBasedTimeoutPolicyApi = (*PoliciesActivityBasedTimeoutPolicyApiService)(&c.common)
	c.PoliciesClaimsMappingPolicyApi = (*PoliciesClaimsMappingPolicyApiService)(&c.common)
	c.PoliciesConditionalAccessPolicyApi = (*PoliciesConditionalAccessPolicyApiService)(&c.common)
	c.PoliciesHomeRealmDiscoveryPolicyApi = (*PoliciesHomeRealmDiscoveryPolicyApiService)(&c.common)
	c.PoliciesIdentitySecurityDefaultsEnforcementPolicyApi = (*PoliciesIdentitySecurityDefaultsEnforcementPolicyApiService)(&c.common)
	c.PoliciesPermissionGrantPolicyApi = (*PoliciesPermissionGrantPolicyApiService)(&c.common)
	c.PoliciesPolicyRootApi = (*PoliciesPolicyRootApiService)(&c.common)
	c.PoliciesTokenIssuancePolicyApi = (*PoliciesTokenIssuancePolicyApiService)(&c.common)
	c.PoliciesTokenLifetimePolicyApi = (*PoliciesTokenLifetimePolicyApiService)(&c.common)
	c.ReportsFunctionsApi = (*ReportsFunctionsApiService)(&c.common)
	c.ReportsReportRootApi = (*ReportsReportRootApiService)(&c.common)
	c.SchemaExtensionsSchemaExtensionApi = (*SchemaExtensionsSchemaExtensionApiService)(&c.common)
	c.ScopedRoleMembershipsScopedRoleMembershipApi = (*ScopedRoleMembershipsScopedRoleMembershipApiService)(&c.common)
	c.SecurityAlertApi = (*SecurityAlertApiService)(&c.common)
	c.SecuritySecureScoreApi = (*SecuritySecureScoreApiService)(&c.common)
	c.SecuritySecureScoreControlProfileApi = (*SecuritySecureScoreControlProfileApiService)(&c.common)
	c.SecuritySecurityApi = (*SecuritySecurityApiService)(&c.common)
	c.ServicePrincipalsActionsApi = (*ServicePrincipalsActionsApiService)(&c.common)
	c.ServicePrincipalsAppRoleAssignmentApi = (*ServicePrincipalsAppRoleAssignmentApiService)(&c.common)
	c.ServicePrincipalsClaimsMappingPolicyApi = (*ServicePrincipalsClaimsMappingPolicyApiService)(&c.common)
	c.ServicePrincipalsDelegatedPermissionClassificationApi = (*ServicePrincipalsDelegatedPermissionClassificationApiService)(&c.common)
	c.ServicePrincipalsDirectoryObjectApi = (*ServicePrincipalsDirectoryObjectApiService)(&c.common)
	c.ServicePrincipalsEndpointApi = (*ServicePrincipalsEndpointApiService)(&c.common)
	c.ServicePrincipalsFunctionsApi = (*ServicePrincipalsFunctionsApiService)(&c.common)
	c.ServicePrincipalsHomeRealmDiscoveryPolicyApi = (*ServicePrincipalsHomeRealmDiscoveryPolicyApiService)(&c.common)
	c.ServicePrincipalsOAuth2PermissionGrantApi = (*ServicePrincipalsOAuth2PermissionGrantApiService)(&c.common)
	c.ServicePrincipalsServicePrincipalApi = (*ServicePrincipalsServicePrincipalApiService)(&c.common)
	c.ServicePrincipalsTokenIssuancePolicyApi = (*ServicePrincipalsTokenIssuancePolicyApiService)(&c.common)
	c.ServicePrincipalsTokenLifetimePolicyApi = (*ServicePrincipalsTokenLifetimePolicyApiService)(&c.common)
	c.SharesActionsApi = (*SharesActionsApiService)(&c.common)
	c.SharesDriveItemApi = (*SharesDriveItemApiService)(&c.common)
	c.SharesFunctionsApi = (*SharesFunctionsApiService)(&c.common)
	c.SharesListApi = (*SharesListApiService)(&c.common)
	c.SharesListItemApi = (*SharesListItemApiService)(&c.common)
	c.SharesPermissionApi = (*SharesPermissionApiService)(&c.common)
	c.SharesSharedDriveItemApi = (*SharesSharedDriveItemApiService)(&c.common)
	c.SharesSiteApi = (*SharesSiteApiService)(&c.common)
	c.SitesActionsApi = (*SitesActionsApiService)(&c.common)
	c.SitesBaseItemApi = (*SitesBaseItemApiService)(&c.common)
	c.SitesColumnDefinitionApi = (*SitesColumnDefinitionApiService)(&c.common)
	c.SitesContentTypeApi = (*SitesContentTypeApiService)(&c.common)
	c.SitesDriveApi = (*SitesDriveApiService)(&c.common)
	c.SitesFunctionsApi = (*SitesFunctionsApiService)(&c.common)
	c.SitesItemAnalyticsApi = (*SitesItemAnalyticsApiService)(&c.common)
	c.SitesListApi = (*SitesListApiService)(&c.common)
	c.SitesOnenoteApi = (*SitesOnenoteApiService)(&c.common)
	c.SitesSiteApi = (*SitesSiteApiService)(&c.common)
	c.SubscribedSkusSubscribedSkuApi = (*SubscribedSkusSubscribedSkuApiService)(&c.common)
	c.SubscriptionsSubscriptionApi = (*SubscriptionsSubscriptionApiService)(&c.common)
	c.TeamsActionsApi = (*TeamsActionsApiService)(&c.common)
	c.TeamsChannelApi = (*TeamsChannelApiService)(&c.common)
	c.TeamsConversationMemberApi = (*TeamsConversationMemberApiService)(&c.common)
	c.TeamsFunctionsApi = (*TeamsFunctionsApiService)(&c.common)
	c.TeamsGroupApi = (*TeamsGroupApiService)(&c.common)
	c.TeamsScheduleApi = (*TeamsScheduleApiService)(&c.common)
	c.TeamsTeamApi = (*TeamsTeamApiService)(&c.common)
	c.TeamsTeamsAppInstallationApi = (*TeamsTeamsAppInstallationApiService)(&c.common)
	c.TeamsTeamsAsyncOperationApi = (*TeamsTeamsAsyncOperationApiService)(&c.common)
	c.TeamsTeamsTemplateApi = (*TeamsTeamsTemplateApiService)(&c.common)
	c.TeamsTemplatesTeamsTemplateApi = (*TeamsTemplatesTeamsTemplateApiService)(&c.common)
	c.TeamworkTeamworkApi = (*TeamworkTeamworkApiService)(&c.common)
	c.TeamworkWorkforceIntegrationApi = (*TeamworkWorkforceIntegrationApiService)(&c.common)
	c.UsersActionsApi = (*UsersActionsApiService)(&c.common)
	c.UsersAppRoleAssignmentApi = (*UsersAppRoleAssignmentApiService)(&c.common)
	c.UsersCalendarApi = (*UsersCalendarApiService)(&c.common)
	c.UsersCalendarGroupApi = (*UsersCalendarGroupApiService)(&c.common)
	c.UsersContactApi = (*UsersContactApiService)(&c.common)
	c.UsersContactFolderApi = (*UsersContactFolderApiService)(&c.common)
	c.UsersDeviceManagementTroubleshootingEventApi = (*UsersDeviceManagementTroubleshootingEventApiService)(&c.common)
	c.UsersDirectoryObjectApi = (*UsersDirectoryObjectApiService)(&c.common)
	c.UsersDriveApi = (*UsersDriveApiService)(&c.common)
	c.UsersEventApi = (*UsersEventApiService)(&c.common)
	c.UsersExtensionApi = (*UsersExtensionApiService)(&c.common)
	c.UsersFunctionsApi = (*UsersFunctionsApiService)(&c.common)
	c.UsersInferenceClassificationApi = (*UsersInferenceClassificationApiService)(&c.common)
	c.UsersLicenseDetailsApi = (*UsersLicenseDetailsApiService)(&c.common)
	c.UsersMailFolderApi = (*UsersMailFolderApiService)(&c.common)
	c.UsersManagedAppRegistrationApi = (*UsersManagedAppRegistrationApiService)(&c.common)
	c.UsersManagedDeviceApi = (*UsersManagedDeviceApiService)(&c.common)
	c.UsersMessageApi = (*UsersMessageApiService)(&c.common)
	c.UsersOAuth2PermissionGrantApi = (*UsersOAuth2PermissionGrantApiService)(&c.common)
	c.UsersOfficeGraphInsightsApi = (*UsersOfficeGraphInsightsApiService)(&c.common)
	c.UsersOnenoteApi = (*UsersOnenoteApiService)(&c.common)
	c.UsersOnlineMeetingApi = (*UsersOnlineMeetingApiService)(&c.common)
	c.UsersOutlookUserApi = (*UsersOutlookUserApiService)(&c.common)
	c.UsersPersonApi = (*UsersPersonApiService)(&c.common)
	c.UsersPlannerUserApi = (*UsersPlannerUserApiService)(&c.common)
	c.UsersProfilePhotoApi = (*UsersProfilePhotoApiService)(&c.common)
	c.UsersScopedRoleMembershipApi = (*UsersScopedRoleMembershipApiService)(&c.common)
	c.UsersSiteApi = (*UsersSiteApiService)(&c.common)
	c.UsersTeamApi = (*UsersTeamApiService)(&c.common)
	c.UsersTodoApi = (*UsersTodoApiService)(&c.common)
	c.UsersUserApi = (*UsersUserApiService)(&c.common)
	c.UsersUserActivityApi = (*UsersUserActivityApiService)(&c.common)
	c.UsersUserSettingsApi = (*UsersUserSettingsApiService)(&c.common)
	c.UsersUserTeamworkApi = (*UsersUserTeamworkApiService)(&c.common)
	c.WorkbooksActionsApi = (*WorkbooksActionsApiService)(&c.common)
	c.WorkbooksDriveItemApi = (*WorkbooksDriveItemApiService)(&c.common)
	c.WorkbooksDriveItemVersionApi = (*WorkbooksDriveItemVersionApiService)(&c.common)
	c.WorkbooksFunctionsApi = (*WorkbooksFunctionsApiService)(&c.common)
	c.WorkbooksItemAnalyticsApi = (*WorkbooksItemAnalyticsApiService)(&c.common)
	c.WorkbooksListItemApi = (*WorkbooksListItemApiService)(&c.common)
	c.WorkbooksPermissionApi = (*WorkbooksPermissionApiService)(&c.common)
	c.WorkbooksSubscriptionApi = (*WorkbooksSubscriptionApiService)(&c.common)
	c.WorkbooksThumbnailSetApi = (*WorkbooksThumbnailSetApiService)(&c.common)
	c.WorkbooksWorkbookApi = (*WorkbooksWorkbookApiService)(&c.common)

	return c
}

func atoi(in string) (int, error) {
	return strconv.Atoi(in)
}

// selectHeaderContentType select a content type from the available list.
func selectHeaderContentType(contentTypes []string) string {
	if len(contentTypes) == 0 {
		return ""
	}
	if contains(contentTypes, "application/json") {
		return "application/json"
	}
	return contentTypes[0] // use the first content type specified in 'consumes'
}

// selectHeaderAccept join all accept types and return
func selectHeaderAccept(accepts []string) string {
	if len(accepts) == 0 {
		return ""
	}

	if contains(accepts, "application/json") {
		return "application/json"
	}

	return strings.Join(accepts, ",")
}

// contains is a case insenstive match, finding needle in a haystack
func contains(haystack []string, needle string) bool {
	for _, a := range haystack {
		if strings.ToLower(a) == strings.ToLower(needle) {
			return true
		}
	}
	return false
}

// Verify optional parameters are of the correct type.
func typeCheckParameter(obj interface{}, expected string, name string) error {
	// Make sure there is an object.
	if obj == nil {
		return nil
	}

	// Check the type is as expected.
	if reflect.TypeOf(obj).String() != expected {
		return fmt.Errorf("Expected %s to be of type %s but received %s.", name, expected, reflect.TypeOf(obj).String())
	}
	return nil
}

// parameterToString convert interface{} parameters to string, using a delimiter if format is provided.
func parameterToString(obj interface{}, collectionFormat string) string {
	var delimiter string

	switch collectionFormat {
	case "pipes":
		delimiter = "|"
	case "ssv":
		delimiter = " "
	case "tsv":
		delimiter = "\t"
	case "csv":
		delimiter = ","
	}

	if reflect.TypeOf(obj).Kind() == reflect.Slice {
		return strings.Trim(strings.Replace(fmt.Sprint(obj), " ", delimiter, -1), "[]")
	} else if t, ok := obj.(time.Time); ok {
		return t.Format(time.RFC3339)
	}

	return fmt.Sprintf("%v", obj)
}

// helper for converting interface{} parameters to json strings
func parameterToJson(obj interface{}) (string, error) {
	jsonBuf, err := json.Marshal(obj)
	if err != nil {
		return "", err
	}
	return string(jsonBuf), err
}

// callAPI do the request.
func (c *APIClient) callAPI(request *http.Request) (*http.Response, error) {
	if c.cfg.Debug {
		dump, err := httputil.DumpRequestOut(request, true)
		if err != nil {
			return nil, err
		}
		log.Printf("\n%s\n", string(dump))
	}

	resp, err := c.cfg.HTTPClient.Do(request)
	if err != nil {
		return resp, err
	}

	if c.cfg.Debug {
		dump, err := httputil.DumpResponse(resp, true)
		if err != nil {
			return resp, err
		}
		log.Printf("\n%s\n", string(dump))
	}

	return resp, err
}

// ChangeBasePath changes base path to allow switching to mocks
func (c *APIClient) ChangeBasePath(path string) {
	c.cfg.BasePath = path
}

// Allow modification of underlying config for alternate implementations and testing
// Caution: modifying the configuration while live can cause data races and potentially unwanted behavior
func (c *APIClient) GetConfig() *Configuration {
	return c.cfg
}

// prepareRequest build the request
func (c *APIClient) prepareRequest(
	ctx context.Context,
	path string, method string,
	postBody interface{},
	headerParams map[string]string,
	queryParams url.Values,
	formParams url.Values,
	formFileName string,
	fileName string,
	fileBytes []byte) (localVarRequest *http.Request, err error) {

	var body *bytes.Buffer

	// Detect postBody type and post.
	if postBody != nil {
		contentType := headerParams["Content-Type"]
		if contentType == "" {
			contentType = detectContentType(postBody)
			headerParams["Content-Type"] = contentType
		}

		body, err = setBody(postBody, contentType)
		if err != nil {
			return nil, err
		}
	}

	// add form parameters and file if available.
	if strings.HasPrefix(headerParams["Content-Type"], "multipart/form-data") && len(formParams) > 0 || (len(fileBytes) > 0 && fileName != "") {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and multipart form at the same time.")
		}
		body = &bytes.Buffer{}
		w := multipart.NewWriter(body)

		for k, v := range formParams {
			for _, iv := range v {
				if strings.HasPrefix(k, "@") { // file
					err = addFile(w, k[1:], iv)
					if err != nil {
						return nil, err
					}
				} else { // form value
					w.WriteField(k, iv)
				}
			}
		}
		if len(fileBytes) > 0 && fileName != "" {
			w.Boundary()
			//_, fileNm := filepath.Split(fileName)
			part, err := w.CreateFormFile(formFileName, filepath.Base(fileName))
			if err != nil {
				return nil, err
			}
			_, err = part.Write(fileBytes)
			if err != nil {
				return nil, err
			}
		}

		// Set the Boundary in the Content-Type
		headerParams["Content-Type"] = w.FormDataContentType()

		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
		w.Close()
	}

	if strings.HasPrefix(headerParams["Content-Type"], "application/x-www-form-urlencoded") && len(formParams) > 0 {
		if body != nil {
			return nil, errors.New("Cannot specify postBody and x-www-form-urlencoded form at the same time.")
		}
		body = &bytes.Buffer{}
		body.WriteString(formParams.Encode())
		// Set Content-Length
		headerParams["Content-Length"] = fmt.Sprintf("%d", body.Len())
	}

	// Setup path and query parameters
	url, err := url.Parse(path)
	if err != nil {
		return nil, err
	}

	// Override request host, if applicable
	if c.cfg.Host != "" {
		url.Host = c.cfg.Host
	}

	// Override request scheme, if applicable
	if c.cfg.Scheme != "" {
		url.Scheme = c.cfg.Scheme
	}

	// Adding Query Param
	query := url.Query()
	for k, v := range queryParams {
		for _, iv := range v {
			query.Add(k, iv)
		}
	}

	// Encode the parameters.
	url.RawQuery = query.Encode()

	// Generate a new request
	if body != nil {
		localVarRequest, err = http.NewRequest(method, url.String(), body)
	} else {
		localVarRequest, err = http.NewRequest(method, url.String(), nil)
	}
	if err != nil {
		return nil, err
	}

	// add header parameters, if any
	if len(headerParams) > 0 {
		headers := http.Header{}
		for h, v := range headerParams {
			headers.Set(h, v)
		}
		localVarRequest.Header = headers
	}

	// Add the user agent to the request.
	localVarRequest.Header.Add("User-Agent", c.cfg.UserAgent)

	if ctx != nil {
		// add context to the request
		localVarRequest = localVarRequest.WithContext(ctx)

		// Walk through any authentication.

		// OAuth2 authentication
		if tok, ok := ctx.Value(ContextOAuth2).(oauth2.TokenSource); ok {
			// We were able to grab an oauth2 token from the context
			var latestToken *oauth2.Token
			if latestToken, err = tok.Token(); err != nil {
				return nil, err
			}

			latestToken.SetAuthHeader(localVarRequest)
		}

		// Basic HTTP Authentication
		if auth, ok := ctx.Value(ContextBasicAuth).(BasicAuth); ok {
			localVarRequest.SetBasicAuth(auth.UserName, auth.Password)
		}

		// AccessToken Authentication
		if auth, ok := ctx.Value(ContextAccessToken).(string); ok {
			localVarRequest.Header.Add("Authorization", "Bearer "+auth)
		}

	}

	for header, value := range c.cfg.DefaultHeader {
		localVarRequest.Header.Add(header, value)
	}

	return localVarRequest, nil
}

func (c *APIClient) decode(v interface{}, b []byte, contentType string) (err error) {
	if len(b) == 0 {
		return nil
	}
	if s, ok := v.(*string); ok {
		*s = string(b)
		return nil
	}
	if f, ok := v.(**os.File); ok {
		*f, err = ioutil.TempFile("", "HttpClientFile")
		if err != nil {
			return
		}
		_, err = (*f).Write(b)
		_, err = (*f).Seek(0, io.SeekStart)
		return
	}
	if xmlCheck.MatchString(contentType) {
		if err = xml.Unmarshal(b, v); err != nil {
			return err
		}
		return nil
	}
	if jsonCheck.MatchString(contentType) {
		if err = json.Unmarshal(b, v); err != nil {
			return err
		}
		return nil
	}
	return errors.New("undefined response type")
}

// Add a file to the multipart request
func addFile(w *multipart.Writer, fieldName, path string) error {
	file, err := os.Open(path)
	if err != nil {
		return err
	}
	defer file.Close()

	part, err := w.CreateFormFile(fieldName, filepath.Base(path))
	if err != nil {
		return err
	}
	_, err = io.Copy(part, file)

	return err
}

// Prevent trying to import "fmt"
func reportError(format string, a ...interface{}) error {
	return fmt.Errorf(format, a...)
}

// Set request body from an interface{}
func setBody(body interface{}, contentType string) (bodyBuf *bytes.Buffer, err error) {
	if bodyBuf == nil {
		bodyBuf = &bytes.Buffer{}
	}

	if reader, ok := body.(io.Reader); ok {
		_, err = bodyBuf.ReadFrom(reader)
	} else if b, ok := body.([]byte); ok {
		_, err = bodyBuf.Write(b)
	} else if s, ok := body.(string); ok {
		_, err = bodyBuf.WriteString(s)
	} else if s, ok := body.(*string); ok {
		_, err = bodyBuf.WriteString(*s)
	} else if jsonCheck.MatchString(contentType) {
		err = json.NewEncoder(bodyBuf).Encode(body)
	} else if xmlCheck.MatchString(contentType) {
		err = xml.NewEncoder(bodyBuf).Encode(body)
	}

	if err != nil {
		return nil, err
	}

	if bodyBuf.Len() == 0 {
		err = fmt.Errorf("Invalid body type %s\n", contentType)
		return nil, err
	}
	return bodyBuf, nil
}

// detectContentType method is used to figure out `Request.Body` content type for request header
func detectContentType(body interface{}) string {
	contentType := "text/plain; charset=utf-8"
	kind := reflect.TypeOf(body).Kind()

	switch kind {
	case reflect.Struct, reflect.Map, reflect.Ptr:
		contentType = "application/json; charset=utf-8"
	case reflect.String:
		contentType = "text/plain; charset=utf-8"
	default:
		if b, ok := body.([]byte); ok {
			contentType = http.DetectContentType(b)
		} else if kind == reflect.Slice {
			contentType = "application/json; charset=utf-8"
		}
	}

	return contentType
}

// Ripped from https://github.com/gregjones/httpcache/blob/master/httpcache.go
type cacheControl map[string]string

func parseCacheControl(headers http.Header) cacheControl {
	cc := cacheControl{}
	ccHeader := headers.Get("Cache-Control")
	for _, part := range strings.Split(ccHeader, ",") {
		part = strings.Trim(part, " ")
		if part == "" {
			continue
		}
		if strings.ContainsRune(part, '=') {
			keyval := strings.Split(part, "=")
			cc[strings.Trim(keyval[0], " ")] = strings.Trim(keyval[1], ",")
		} else {
			cc[part] = ""
		}
	}
	return cc
}

// CacheExpires helper function to determine remaining time before repeating a request.
func CacheExpires(r *http.Response) time.Time {
	// Figure out when the cache expires.
	var expires time.Time
	now, err := time.Parse(time.RFC1123, r.Header.Get("date"))
	if err != nil {
		return time.Now()
	}
	respCacheControl := parseCacheControl(r.Header)

	if maxAge, ok := respCacheControl["max-age"]; ok {
		lifetime, err := time.ParseDuration(maxAge + "s")
		if err != nil {
			expires = now
		} else {
			expires = now.Add(lifetime)
		}
	} else {
		expiresHeader := r.Header.Get("Expires")
		if expiresHeader != "" {
			expires, err = time.Parse(time.RFC1123, expiresHeader)
			if err != nil {
				expires = now
			}
		}
	}
	return expires
}

func strlen(s string) int {
	return utf8.RuneCountInString(s)
}

// GenericOpenAPIError Provides access to the body, error and model on returned errors.
type GenericOpenAPIError struct {
	body  []byte
	error string
	model interface{}
}

// Error returns non-empty string if there was an error.
func (e GenericOpenAPIError) Error() string {
	return e.error
}

// Body returns the raw bytes of the response
func (e GenericOpenAPIError) Body() []byte {
	return e.body
}

// Model returns the unpacked model of the error
func (e GenericOpenAPIError) Model() interface{} {
	return e.model
}
